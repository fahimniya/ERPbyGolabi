package data;

public class DBInitiation {
	public boolean initiate() {
		DBManagement db = new DBManagement();
		boolean flag = true;
		flag = flag
				&& db.update("create table FACILITYRESOURCE (ID INT NOT NULL, NAME VARCHAR(255), PRIMARY KEY (ID));");
		flag = flag && db.update(
				"create table FUNDINGRESOURCE (AMOUNT INT NOT NULL DEFAULT '0', UNIT VARCHAR(255) NOT NULL, PRIMARY KEY(UNIT));");
		flag = flag && db.update(
				"create table USER (USERNAME VARCHAR(255) NOT NULL, PASSWORD VARCHAR(255) NOT NULL, NAME VARCHAR(255), ROLE VARCHAR(255), PRIMARY KEY(USERNAME));");
		flag = flag && db.update(
				"create table PROCESS (ID int not null, SOFTWARESYSTEMNAME varchar(255) NOT NULL, FROM_DATE DATE, TO_DATE DATE, TYPE VARCHAR(255), primary key (ID), FOREIGN KEY(SOFTWARESYSTEMNAME) REFERENCES SOFTWARESYSTEM(NAME));");
		flag = flag && db.update(
				"create table HUMANRESOURCE (USERNAME INT NOT NULL, FROM_DATE DATE, TO_DATE DATE, PRIMARY KEY (USERNAME), FOREIGN KEY (USERNAME) REFERENCES USER (USERNAME));");
		flag = flag && db.update(
				"create table FACILITYRESOURCEALLOCATION (MODULENAME VARCHAR(255) NOT NULL, PROJECTNAME VARCHAR(255) NOT NULL, ID INT NOT NULL, TYPE VARCHAR(255) NOT NULL, FROM_DATE DATE NOT NULL, TO_DATE DATE NOT NULL, PRIMARY KEY(MODULENAME, PROJECTNAME, ID, FROM_DATE, TO_DATE), FOREIGN KEY(ID) REFERENCES FACILITYRESOURCE(ID), FOREIGN KEY(PROJECTNAME) REFERENCES PROCESS(PROJECTNAME));");
		flag = flag && db.update(
				"create table HUMANRESOURCEALLOCATION (MODULENAME VARCHAR(255) NOT NULL, PROJECTNAME VARCHAR(255) NOT NULL, USERNAME VARCHAR(255) NOT NULL, TYPE VARCHAR(255) NOT NULL, FROM_DATE DATE NOT NULL, TO_DATE DATE NOT NULL, PRIMARY KEY(MODULENAME, PROJECTNAME, USERNAME, FROM_DATE, TO_DATE), FOREIGN KEY(USERNAME) REFERENCES HUMANRESOURCE(USERNAME), FOREIGN KEY(PROJECTNAME) REFERENCES PROCESS(PROJECTNAME));");
		flag = flag && db.update(
				"create table FUNDINGRESOURCEALLOCATION (MODULENAME VARCHAR(255) NOT NULL, PROJECTNAME VARCHAR(255) NOT NULL, UNIT VARCHAR(255) NOT NULL, AMOUNT INT NOT NULL, TYPE VARCHAR(255) NOT NULL, FROM_DATE DATE NOT NULL, TO_DATE DATE NOT NULL, PRIMARY KEY(MODULENAME, PROJECTNAME, UNIT, AMOUNT, FROM_DATE, TO_DATE), FOREIGN KEY(UNIT) REFERENCES FUNDINGRESOURCE(UNIT), FOREIGN KEY(PROJECTNAME) REFERENCES PROCESS(PROJECTNAME));");
		flag = flag && db.update("create table ORGANIZATIONUNIT (ID INT NOT NULL, PRIMARY KEY(ID));");
		flag = flag && db.update(
				"create table REQUIREDHUMANRESOURCE (HREQID INT NOT NULL, OID INT NOT NULL, PROJECTNAME VARCHAR(255) NOT NULL, HNUMBER INT NOT NULL, SPECIALTY VARCHAR(255), SDATE DATE, PRIORITY INT NOT NULL DEFAULT '3', PRIMARY KEY(HREQID), FOREIGN KEY(OID) REFERENCES ORGANIZATIONUNIT(ID), FOREIGN KEY(PROJECTNAME) REFERENCES SOFTWARESYSTEM(NAME));");
		flag = flag && db.update(
				"create table REQUIREDFACILITYRESOURCE (FREQID INT NOT NULL, OID INT NOT NULL, PROJECTNAME VARCHAR(255) NOT NULL, FNUMBER INT NOT NULL, NAME VARCHAR(255) NOT NULL, SDATE DATE, PRIORITY INT NOT NULL DEFAULT '3', PRIMARY KEY(FREQID), FOREIGN KEY(OID) REFERENCES ORGANIZATIONUNIT(ID), FOREIGN KEY(PROJECTNAME) REFERENCES SOFTWARESYSTEM(NAME));");
		flag = flag && db.update(
				"create table REQUIREDFUNDINGRESOURCE (FREQID INT NOT NULL, OID INT NOT NULL, PROJECTNAME VARCHAR(255) NOT NULL, AMOUNT INT NOT NULL, UNIT VARCHAR(255) NOT NULL, SDATE DATE, PRIORITY INT NOT NULL DEFAULT '3', PRIMARY KEY(FREQID), FOREIGN KEY(OID) REFERENCES ORGANIZATIONUNIT(ID), FOREIGN KEY(PROJECTNAME) REFERENCES SOFTWARESYSTEM(NAME));");
		flag = flag && db.update(
				"create table SOFTWARESYSTEM (NAME VARCHAR(255) NOT NULL, DEVID INT, MAINTENANCEID INT, PRIMARY KEY(NAME), FOREIGN KEY(DEVID) REFERENCES PROCESS(ID), FOREIGN KEY(MAINTENANCEID) REFERENCES PROCESS(ID));");
		flag = flag && db.update(
				"create table SOFTWARESYSTEM_ORGANIZATIONUNIT (OID INT NOT NULL, SSNAME VARCHAR(255) NOT NULL, PRIMARY KEY(OID, SSNAME), FOREIGN KEY(OID) REFERENCES ORGANIZATIONUNIT(ID), FOREIGN KEY(SSNAME) REFERENCES SOFTWARESYSTEM(NAME));");
		flag = flag && db.update(
				"create table PENDINGUPDATE (USERNAME VARCHAR(255) NOT NULL, PASSWORD VARCHAR(255) NOT NULL, NAME VARCHAR(255), ROLE VARCHAR(255), PRIMARY KEY(USERNAME));");
		return flag;
	}
}
